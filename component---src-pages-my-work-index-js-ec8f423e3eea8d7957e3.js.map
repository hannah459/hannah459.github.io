{"version":3,"sources":["webpack:///./src/components/my-work-page-content.js","webpack:///./src/components/empty-line.js","webpack:///./src/pages/my-work/index.js"],"names":["pine","mockupDreamWork","mockupHippoMeowV1","mockupHippoMeowV2","mockupMicroLector","mockupTitanNews","iconArrowGreen","iconArrowYellow","Fragment","className","styles","headingContainer","headingContent","fixed","childImageSharp","alt","heading","imgStyle","WebkitTransform","transform","projectRow","backgroundWhite","projectRowContent","projectInfoSeparator","projectInfo","fade","projectCtaLink","to","projectCtaLinkText","backgroundYellow","backgroundGreen","projectCtaLinkTextYellow","moreWorksSection","moreWorksSectionContent","moreWorksGreenLine","moreWorksButtonContainer","title","EmptyLine","variant","paragraph","pageContent","defaultProps"],"mappings":"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","file":"component---src-pages-my-work-index-js-ec8f423e3eea8d7957e3.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image/withIEPolyfill\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\n\r\nimport styles from \"./my-work-page-content.module.scss\"\r\nimport ButtonLink from \"./button-link\"\r\nimport EmptyLine from \"./empty-line\"\r\n\r\nexport default () => {\r\n  const {\r\n    pine,\r\n    mockupDreamWork,\r\n    mockupHippoMeowV1,\r\n    mockupHippoMeowV2,\r\n    mockupMicroLector,\r\n    mockupTitanNews,\r\n    iconArrowGreen,\r\n    iconArrowYellow,\r\n  } = useStaticQuery(graphql`\r\n    query {\r\n      pine: file(relativePath: { eq: \"pine.png\" }) {\r\n        childImageSharp {\r\n          fixed(height: 80) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      mockupDreamWork: file(relativePath: { eq: \"mockupDreamWork.png\" }) {\r\n        childImageSharp {\r\n          fixed(height: 400) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      mockupHippoMeowV1: file(relativePath: { eq: \"mockupHippoMeowV1.png\" }) {\r\n        childImageSharp {\r\n          fixed(height: 400) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      mockupHippoMeowV2: file(relativePath: { eq: \"mockupHippoMeowV2.png\" }) {\r\n        childImageSharp {\r\n          fixed(height: 400) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      mockupMicroLector: file(relativePath: { eq: \"mockupMicroLector.png\" }) {\r\n        childImageSharp {\r\n          fixed(height: 400) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      mockupTitanNews: file(relativePath: { eq: \"mockupTitanNews.png\" }) {\r\n        childImageSharp {\r\n          fixed(height: 400) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      iconArrowGreen: file(relativePath: { eq: \"iconArrowGreen.png\" }) {\r\n        childImageSharp {\r\n          fixed(width: 60) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      iconArrowYellow: file(relativePath: { eq: \"iconArrowYellow.png\" }) {\r\n        childImageSharp {\r\n          fixed(width: 60) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.headingContainer}>\r\n        <div className={styles.headingContent}>\r\n          <Img fixed={pine.childImageSharp.fixed} alt=\"\" />\r\n          <div className={styles.heading}>My Work</div>\r\n          <Img\r\n            fixed={pine.childImageSharp.fixed}\r\n            alt=\"\"\r\n            imgStyle={{\r\n              WebkitTransform: \"scaleX(-1)\",\r\n              transform: \"scaleX(-1)\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.projectRow} ${styles.backgroundWhite}`}>\r\n        <div className={styles.projectRowContent}>\r\n          <Img fixed={mockupDreamWork.childImageSharp.fixed} alt=\"\" />\r\n          <div className={styles.projectInfoSeparator} />\r\n          <div className={styles.projectInfo}>\r\n            <div>\r\n              I create a website for posting and seeking jobs in design field.\r\n              The main color is used based on 2020 color trend: classic blue.\r\n              This color certainly brings a feeling of trust and gentleness.\r\n            </div>\r\n            <AniLink\r\n              fade\r\n              className={styles.projectCtaLink}\r\n              to=\"/my-work/dreamwork\"\r\n            >\r\n              <Img fixed={iconArrowGreen.childImageSharp.fixed} alt=\"\" />\r\n              <span className={styles.projectCtaLinkText}>More Details</span>\r\n            </AniLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.projectRow} ${styles.backgroundYellow}`}>\r\n        <div className={styles.projectRowContent}>\r\n          <div className={styles.projectInfo}>\r\n            <div>\r\n              This is the homepage of an online newspaper. It is a big challenge\r\n              for alignment and content arrangement.\r\n            </div>\r\n            <AniLink\r\n              fade\r\n              className={styles.projectCtaLink}\r\n              to=\"/my-work/titan-news\"\r\n            >\r\n              <Img fixed={iconArrowGreen.childImageSharp.fixed} alt=\"\" />\r\n              <span className={styles.projectCtaLinkText}>More Details</span>\r\n            </AniLink>\r\n          </div>\r\n          <div className={styles.projectInfoSeparator} />\r\n          <Img fixed={mockupTitanNews.childImageSharp.fixed} alt=\"\" />\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.projectRow} ${styles.backgroundGreen}`}>\r\n        <div className={styles.projectRowContent}>\r\n          <Img fixed={mockupMicroLector.childImageSharp.fixed} alt=\"\" />\r\n          <div className={styles.projectInfoSeparator} />\r\n          <div className={styles.projectInfo}>\r\n            <div>\r\n              I redesign an existing education websign homepage. Service logos\r\n              and details, as well as attractive information, have been added.\r\n            </div>\r\n            <AniLink\r\n              fade\r\n              className={styles.projectCtaLink}\r\n              to=\"/my-work/micro-lector\"\r\n            >\r\n              <Img fixed={iconArrowYellow.childImageSharp.fixed} alt=\"\" />\r\n              <span\r\n                className={`${styles.projectCtaLinkText} ${styles.projectCtaLinkTextYellow}`}\r\n              >\r\n                More Details\r\n              </span>\r\n            </AniLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.projectRow} ${styles.backgroundWhite}`}>\r\n        <div className={styles.projectRowContent}>\r\n          <div className={styles.projectInfo}>\r\n            <div>\r\n              I work on an idea for a family cake and cafe shop website. I aim\r\n              to bring a fresh and friendly atmosphere for the homepage.\r\n            </div>\r\n            <AniLink\r\n              fade\r\n              className={styles.projectCtaLink}\r\n              to=\"/my-work/hippo-meow-v1\"\r\n            >\r\n              <Img fixed={iconArrowGreen.childImageSharp.fixed} alt=\"\" />\r\n              <span className={styles.projectCtaLinkText}>More Details</span>\r\n            </AniLink>\r\n          </div>\r\n          <div className={styles.projectInfoSeparator} />\r\n          <Img fixed={mockupHippoMeowV1.childImageSharp.fixed} alt=\"\" />\r\n        </div>\r\n      </div>\r\n      <div className={`${styles.projectRow} ${styles.backgroundYellow}`}>\r\n        <div className={styles.projectRowContent}>\r\n          <Img fixed={mockupHippoMeowV2.childImageSharp.fixed} alt=\"\" />\r\n          <div className={styles.projectInfoSeparator} />\r\n          <div className={styles.projectInfo}>\r\n            <div>\r\n              I want to bring a traditional and cozy atmosphere for the users,\r\n              so I let the homepage imitate the interface of a shop in reality\r\n              with wood walls, lean-to, neon signboard, and window.\r\n            </div>\r\n            <AniLink\r\n              fade\r\n              className={styles.projectCtaLink}\r\n              to=\"/my-work/hippo-meow-v2\"\r\n            >\r\n              <Img fixed={iconArrowGreen.childImageSharp.fixed} alt=\"\" />\r\n              <span className={styles.projectCtaLinkText}>More Details</span>\r\n            </AniLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <EmptyLine />\r\n      <div className={styles.moreWorksSection}>\r\n        <div className={styles.moreWorksSectionContent}>\r\n          <div className={styles.moreWorksGreenLine} />\r\n          <div className={styles.moreWorksButtonContainer}>\r\n            <ButtonLink to=\"/404\" title=\"More Works\" />\r\n          </div>\r\n          <div className={styles.moreWorksGreenLine} />\r\n        </div>\r\n      </div>\r\n      <EmptyLine />\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport styles from \"./empty-line.module.scss\"\r\n\r\nconst EmptyLine = ({ variant }) => {\r\n  const className =\r\n    variant === \"Paragraph\" ? styles.paragraph : styles.pageContent\r\n  return <div className={className} />\r\n}\r\n\r\nEmptyLine.propTypes = {\r\n  variant: PropTypes.oneOf([\"PageContent\", \"Paragraph\"]),\r\n}\r\n\r\nEmptyLine.defaultProps = {\r\n  variant: \"PageContent\",\r\n}\r\n\r\nexport default EmptyLine\r\n","import React from \"react\"\r\n\r\nimport MyWorkPageContent from \"../../components/my-work-page-content\"\r\n\r\nexport default () => <MyWorkPageContent />\r\n"],"sourceRoot":""}